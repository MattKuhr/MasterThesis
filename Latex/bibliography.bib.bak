% Encoding: UTF-8

@InProceedings{ME14,
  author    = {Holger Meyer and Alf-Christian Schering and Christoph Schmitt},
  title     = {{WossiDiA --- The Wossidlo Digital Archive}},
  booktitle = {{Corpora Ethnographica Online}},
  year      = {2014},
  crossref  = {ceo:2014},
}

@Article{AB12,
  author     = {Abello, James and Broadwell, Peter and Tangherlini, Timothy R.},
  title      = {Computational Folkloristics},
  journal    = {Commun. ACM},
  year       = {2012},
  volume     = {55},
  number     = {7},
  pages      = {60--70},
  month      = jul,
  issn       = {0001-0782},
  acmid      = {2209267},
  address    = {New York, NY, USA},
  doi        = {10.1145/2209249.2209267},
  issue_date = {July 2012},
  numpages   = {11},
  publisher  = {ACM},
  url        = {http://doi.acm.org/10.1145/2209249.2209267},
}

@InProceedings{MA15,
  author    = {Fadi Maali and St{\'{e}}phane Campinas and Stefan Decker},
  title     = {Gagg: {A} Graph Aggregation Operator},
  booktitle = {The Semantic Web. Latest Advances and New Domains - 12th European Semantic Web Conference, {ESWC} 2015, Portoroz, Slovenia, May 31 - June 4, 2015. Proceedings},
  year      = {2015},
  editor    = {Fabien Gandon and Marta Sabou and Harald Sack and Claudia d'Amato and Philippe Cudr{\'{e}}{-}Mauroux and Antoine Zimmermann},
  volume    = {9088},
  series    = {Lecture Notes in Computer Science},
  pages     = {491--504},
  publisher = {Springer},
  bibsource = {dblp computer science bibliography, http://dblp.org},
  biburl    = {http://dblp.uni-trier.de/rec/bib/conf/esws/MaaliCD15},
  doi       = {10.1007/978-3-319-18818-8_30},
  timestamp = {Thu, 03 Sep 2015 11:21:30 +0200},
  url       = {http://dx.doi.org/10.1007/978-3-319-18818-8_30},
}

@InProceedings{IO10,
  author    = {Borislav Iordanov},
  title     = {HyperGraphDB: {A} Generalized Graph Database},
  booktitle = {Web-Age Information Management - {WAIM} 2010 International Workshops: {IWGD} 2010, {XMLDM} 2010, {WCMT} 2010, Jiuzhaigou Valley, China, July 15-17, 2010, Revised Selected Papers},
  year      = {2010},
  editor    = {Heng Tao Shen and Jian Pei and M. Tamer {\"{O}}zsu and Lei Zou and Jiaheng Lu and Tok Wang Ling and Ge Yu and Yi Zhuang and Jie Shao},
  volume    = {6185},
  series    = {Lecture Notes in Computer Science},
  pages     = {25--36},
  publisher = {Springer},
  bibsource = {dblp computer science bibliography, http://dblp.org},
  biburl    = {http://dblp.uni-trier.de/rec/bib/conf/waim/Iordanov10},
  doi       = {10.1007/978-3-642-16720-1_3},
  timestamp = {Tue, 23 Nov 2010 21:47:55 +0100},
  url       = {http://dx.doi.org/10.1007/978-3-642-16720-1_3},
}

@Article{GA93,
  author    = {Giorgio Gallo and Giustino Longo and Stefano Pallottino},
  title     = {Directed Hypergraphs and Applications},
  journal   = {Discrete Applied Mathematics},
  year      = {1993},
  volume    = {42},
  number    = {2},
  pages     = {177--201},
  bibsource = {dblp computer science bibliography, http://dblp.org},
  biburl    = {http://dblp.uni-trier.de/rec/bib/journals/dam/GalloLP93},
  doi       = {10.1016/0166-218X(93)90045-P},
  file      = {:C\:\\Users\\Lotu\\Documents\\PowerGraph-XL\\Literatur\\Gallo.pdf:PDF},
  timestamp = {Thu, 22 May 2003 13:54:56 +0200},
  url       = {http://dx.doi.org/10.1016/0166-218X(93)90045-P},
}

@Article{YU16,
  author    = {Xinran Yu and Turgay Korkmaz},
  title     = {Hypergraph querying using structural indexing and layer-related-closure verification},
  journal   = {Knowl. Inf. Syst.},
  year      = {2016},
  volume    = {46},
  number    = {3},
  pages     = {537--565},
  bibsource = {dblp computer science bibliography, http://dblp.org},
  biburl    = {http://dblp.uni-trier.de/rec/bib/journals/kais/YuK16},
  doi       = {10.1007/s10115-015-0829-4},
  timestamp = {Tue, 09 Feb 2016 15:52:37 +0100},
  url       = {http://dx.doi.org/10.1007/s10115-015-0829-4},
}

@Article{PU13,
  author    = {Rami Puzis and Manish Purohit and V. S. Subrahmanian},
  title     = {Betweenness computation in the single graph representation of hypergraphs},
  journal   = {Social Networks},
  year      = {2013},
  volume    = {35},
  number    = {4},
  pages     = {561--572},
  bibsource = {dblp computer science bibliography, http://dblp.org},
  biburl    = {http://dblp.uni-trier.de/rec/bib/journals/socnet/PuzisPS13},
  doi       = {10.1016/j.socnet.2013.07.006},
  timestamp = {Wed, 02 Oct 2013 20:00:36 +0200},
  url       = {http://dx.doi.org/10.1016/j.socnet.2013.07.006},
}

@Article{GA15,
  author    = {Jianhang Gao and Qing Zhao and Wei Ren and Ananthram Swami and Ram Ramanathan and Amotz Bar{-}Noy},
  title     = {Dynamic Shortest Path Algorithms for Hypergraphs},
  journal   = {{IEEE/ACM} Trans. Netw.},
  year      = {2015},
  volume    = {23},
  number    = {6},
  pages     = {1805--1817},
  bibsource = {dblp computer science bibliography, http://dblp.org},
  biburl    = {http://dblp.uni-trier.de/rec/bib/journals/ton/GaoZRSRB15},
  doi       = {10.1109/TNET.2014.2343914},
  timestamp = {Tue, 05 Jan 2016 19:04:25 +0100},
  url       = {http://dx.doi.org/10.1109/TNET.2014.2343914},
}

@Book{AG10,
  title     = {Managing and Mining Graph Data},
  publisher = {Springer},
  year      = {2010},
  editor    = {Charu C. Aggarwal and Haixun Wang},
  volume    = {40},
  series    = {Advances in Database Systems},
  isbn      = {978-1-4419-6044-3},
  bibsource = {dblp computer science bibliography, http://dblp.org},
  biburl    = {http://dblp.uni-trier.de/rec/bib/series/ads/2010-40},
  doi       = {10.1007/978-1-4419-6045-0},
  timestamp = {Sat, 27 Aug 2011 18:01:09 +0200},
  url       = {http://dx.doi.org/10.1007/978-1-4419-6045-0},
}

@InProceedings{GI02,
  author    = {R. Giugno and D. Shasha},
  title     = {GraphGrep: A fast and universal method for querying graphs},
  booktitle = {Object recognition supported by user interaction for service robots},
  year      = {2002},
  volume    = {2},
  pages     = {112-115 vol.2},
  doi       = {10.1109/ICPR.2002.1048250},
  issn      = {1051-4651},
  keywords  = {graph theory;image matching;query processing;visual databases;Glide;GraphGrep;Smart;Xpath;application-independent method;graph database;graph querying;hash-based fingerprinting;inexact subgraph matching;regular expression graph query language;single node wildcards;subgraph occurrences;variable-length wildcards;Chemistry;Computer science;Computer vision;Data engineering;Data models;Database languages;Design methodology;Indexing;Mathematics;XML},
}

@Book{BE89,
  title     = {{Hypergraphs --- Combinatorics of Finite Sets}},
  publisher = {North Holland},
  year      = {1989},
  author    = {Claude Berge},
  edition   = {1st Edition},
}

@Article{ME17,
  author    = {Holger Meyer and Alf-Christian Schering and Andreas Heuer},
  title     = {{The Hydra.Powergraph System --- Building digital archives with directed and typed hypergraphs}},
  journal   = {Datenbank-Spektrum},
  year      = {2017},
  volume    = {17},
  number    = {3},
  address   = {Heidelberg, New York},
  doi       = {10.1007/s13222-017-0253-x},
  publisher = {Srpinger},
  pubstate  = {submitted},
}

@Book{VO13,
  title     = {Fundamente der Graphentheorie},
  publisher = {Springer Vienna},
  year      = {2013},
  author    = {Volkmann, L.},
  isbn      = {9783709194492},
  url       = {https://books.google.de/books?id=FMN9BwAAQBAJ},
}

@Article{TH17,
  author   = {Then, Manuel and G{\"u}nnemann, Stephan and Kemper, Alfons and Neumann, Thomas},
  title    = {Efficient Batched Distance, Closeness and Betweenness Centrality Computation in Unweighted and Weighted Graphs},
  journal  = {Datenbank-Spektrum},
  year     = {2017},
  volume   = {17},
  number   = {2},
  pages    = {169--182},
  month    = {Jul},
  issn     = {1610-1995},
  abstract = {Distance and centrality computations are important building blocks for modern graph databases as well as for dedicated graph analytics systems. Two commonly used centrality metrics are the compute-intense closeness and betweenness centralities, which require numerous expensive shortest distance calculations. We propose batched algorithm execution to run multiple distance and centrality computations at the same time and let them share common graph and data accesses. Batched execution amortizes the high cost of random memory accesses and presents new vectorization potential on modern CPUs and compute accelerators. We show how batched algorithm execution can be leveraged to significantly improve the performance of distance, closeness, and betweenness centrality calculations on unweighted and weighted graphs. Our evaluation demonstrates that batched execution can improve the runtime of these common metrics by over an order of magnitude.},
  day      = {01},
  doi      = {10.1007/s13222-017-0261-x},
  file     = {:C\:\\Users\\Lotu\\Documents\\PowerGraph-XL\\Literatur\\BatchedDistance_MA17.pdf:PDF},
  url      = {https://doi.org/10.1007/s13222-017-0261-x},
}

@InProceedings{AN16,
  author    = {M. J. Anderson and N. Sundaram and N. Satish and M. M. A. Patwary and T. L. Willke and P. Dubey},
  title     = {GraphPad: Optimized Graph Primitives for Parallel and Distributed Platforms},
  booktitle = {2016 IEEE International Parallel and Distributed Processing Symposium (IPDPS)},
  year      = {2016},
  pages     = {313-322},
  month     = {May},
  doi       = {10.1109/IPDPS.2016.86},
  file      = {:C\:\\Users\\Lotu\\Documents\\PowerGraph-XL\\Literatur\\AN16.pdf:PDF},
  issn      = {1530-2075},
  keywords  = {cloud computing;duality (mathematics);graph theory;linear algebra;mathematics computing;optimisation;parallel processing;sparse matrices;GraphMat;GraphPad;HPC clusters;SpGEMM;SpMSpV;commodity cloud platforms;communication optimizations;data layouts;distributed platforms;distributed setting;duality;generalized linear algebra prim- itives;generalized sparse matrix-vector multiplication;graph applications;high performance graph framework;optimized graph primitives;optimized multinode implementations;parallel platforms;partitioning strategies;sparse matrix-matrix multiplication;Algorithm design and analysis;Kernel;Matrices;Optimization;Programming;Sparse matrices;Graph analytics;SpGEMM;SpMSpV},
}

@Article{ME03,
  author  = {U. Meyer and P. Sanders},
  title   = {Δ-stepping: a parallelizable shortest path algorithm},
  journal = {Journal of Algorithms},
  year    = {2003},
  volume  = {49},
  number  = {1},
  pages   = {114 - 152},
  issn    = {0196-6774},
  note    = {1998 European Symposium on Algorithms},
  doi     = {http://dx.doi.org/10.1016/S0196-6774(03)00076-2},
  url     = {http://www.sciencedirect.com/science/article/pii/S0196677403000762},
}

@InBook{MAL15,
  pages     = {116--130},
  title     = {Tiled Linear Algebra a System for Parallel Graph Algorithms},
  publisher = {Springer International Publishing},
  year      = {2015},
  author    = {Maleki, Saeed and Evans, G. Carl and Padua, David A.},
  editor    = {Brodman, James and Tu, Peng},
  address   = {Cham},
  isbn      = {978-3-319-17473-0},
  abstract  = {High performance parallel kernels for solving graph problems are complex and difficult to write. Some systems have been developed to facilitate the implementation of these kernels but the code they produce does not always perform as well as custom software. In this space, we propose Tiled Linear Algebra (TLA), a multi-level system based on linear algebra but with explicit parallel extensions. Programs can be first written in a conventional manner using linear algebra and then tuned for parallel performance using our extension. This separation allows programmers with different expertise to focus on their strengths with writing original codes that can then be tuned by parallel experts.},
  booktitle = {Languages and Compilers for Parallel Computing: 27th International Workshop, LCPC 2014, Hillsboro, OR, USA, September 15-17, 2014, Revised Selected Papers},
  doi       = {10.1007/978-3-319-17473-0_8},
  file      = {:C\:\\Users\\Lotu\\Documents\\PowerGraph-XL\\Literatur\\MA15.pdf:PDF},
  url       = {https://doi.org/10.1007/978-3-319-17473-0_8},
}

@Article{XI14,
  author    = {Reynold S. Xin and Daniel Crankshaw and Ankur Dave and Joseph E. Gonzalez and Michael J. Franklin and Ion Stoica},
  title     = {GraphX: Unifying Data-Parallel and Graph-Parallel Analytics},
  journal   = {CoRR},
  year      = {2014},
  volume    = {abs/1402.2394},
  bibsource = {dblp computer science bibliography, http://dblp.org},
  biburl    = {http://dblp.uni-trier.de/rec/bib/journals/corr/XinCDGFS14},
  file      = {:C\:\\Users\\Lotu\\Documents\\PowerGraph-XL\\Literatur\\XI14.pdf:PDF},
  timestamp = {Wed, 07 Jun 2017 14:42:18 +0200},
  url       = {http://arxiv.org/abs/1402.2394},
}

@Article{KE16,
  author    = {Jeremy Kepner and Peter Aaltonen and David A. Bader and Aydin Bulu{\c{c}} and Franz Franchetti and John R. Gilbert and Dylan Hutchison and Manoj Kumar and Andrew Lumsdaine and Henning Meyerhenke and Scott McMillan and Jos{\'{e}} E. Moreira and John D. Owens and Carl Yang and Marcin Zalewski and Timothy G. Mattson},
  title     = {Mathematical Foundations of the GraphBLAS},
  journal   = {CoRR},
  year      = {2016},
  volume    = {abs/1606.05790},
  bibsource = {dblp computer science bibliography, http://dblp.org},
  biburl    = {http://dblp.uni-trier.de/rec/bib/journals/corr/KepnerABBFGHKLM16},
  timestamp = {Wed, 07 Jun 2017 14:42:48 +0200},
  url       = {http://arxiv.org/abs/1606.05790},
}

@Article{AU86,
  author     = {Ausiello, G and D'Atri, A and Sacc\'{a}, D},
  title      = {Minimal Representation of Directed Hypergraphs},
  journal    = {SIAM J. Comput.},
  year       = {1986},
  volume     = {15},
  number     = {2},
  pages      = {418--431},
  month      = may,
  issn       = {0097-5397},
  acmid      = {14094},
  address    = {Philadelphia, PA, USA},
  doi        = {10.1137/0215029},
  issue_date = {May 1986},
  numpages   = {14},
  publisher  = {Society for Industrial and Applied Mathematics},
  url        = {http://dx.doi.org/10.1137/0215029},
}

@InProceedings{DA16,
  author        = {Das, Mahashweta and Simitsis, Alkis and Wilkinson, Kevin},
  title         = {A Hybrid Solution for Mixed Workloads on Dynamic Graphs},
  booktitle     = {Proceedings of the Fourth International Workshop on Graph Data Management Experiences and Systems},
  year          = {2016},
  series        = {GRADES '16},
  pages         = {1:1--1:6},
  address       = {New York, NY, USA},
  publisher     = {ACM},
  __markedentry = {[Matthias:]},
  acmid         = {2960415},
  articleno     = {1},
  doi           = {10.1145/2960414.2960415},
  file          = {:DA16.pdf:PDF},
  isbn          = {978-1-4503-4780-8},
  keywords      = {graph management, hybrid architecture, mixed workload},
  location      = {Redwood Shores, California},
  numpages      = {6},
  url           = {http://doi.acm.org/10.1145/2960414.2960415},
}

@Article{AU17,
  author   = {Giorgio Ausiello and Luigi Laura},
  title    = {Directed hypergraphs: Introduction and fundamental algorithms—A survey},
  journal  = {Theoretical Computer Science},
  year     = {2017},
  volume   = {658},
  pages    = {293 - 306},
  issn     = {0304-3975},
  note     = {Horn formulas, directed hypergraphs, lattices and closure systems: related formalism and application},
  doi      = {http://dx.doi.org/10.1016/j.tcs.2016.03.016},
  keywords = {Directed hypergraphs, Transitive closure, Transitive reduction, Shortest hyperpaths},
  url      = {http://www.sciencedirect.com/science/article/pii/S0304397516002097},
}

@Book{BR13,
  title     = {Hypergraph Theory},
  publisher = {Springer, Heidelberg},
  year      = {2013},
  author    = {Alain Bretto},
  isbn      = {978-3-319-00080-0},
  date      = {2013-04-17},
  ean       = {9783319000800},
  pagetotal = {119},
  url       = {http://www.ebook.de/de/product/20777599/alain_bretto_hypergraph_theory.html},
}

@Article{PR14,
  author   = {Presta, Alessandro Shalita, Alon},
  title    = {Large-scale graph partitioning with Apache Giraph},
  year     = {2014},
  month    = {04},
  keywords = {Infra, Data, Open Source, Graph, Graph Search, Performance, Optimization},
  url      = {https://code.facebook.com/posts/274771932683700/large-scale-graph-partitioning-with-apache-giraph/},
}

@Article{NI05,
  author   = {Lars Relund Nielsen and Kim Allan Andersen and Daniele Pretolani},
  title    = {Finding the K shortest hyperpaths},
  journal  = {Computers \& Operations Research},
  year     = {2005},
  volume   = {32},
  number   = {6},
  pages    = {1477 - 1497},
  issn     = {0305-0548},
  doi      = {http://dx.doi.org/10.1016/j.cor.2003.11.014},
  keywords = {Network programming, Directed hypergraphs, shortest hyperpaths, shortest paths},
  url      = {http://www.sciencedirect.com/science/article/pii/S0305054803003459},
}

@PhdThesis{DO01,
  author = {Van Dongen, Stijn Marinus},
  title  = {Graph clustering by flow simulation},
  school = {Utrecht University},
  year   = {2001},
}

@InProceedings{HU15,
  author    = {Huang, Jin and Zhang, Rui and Yu, Jeffrey Xu},
  title     = {Scalable Hypergraph Learning and Processing},
  booktitle = {Proceedings of the 2015 IEEE International Conference on Data Mining (ICDM)},
  year      = {2015},
  series    = {ICDM '15},
  pages     = {775--780},
  address   = {Washington, DC, USA},
  publisher = {IEEE Computer Society},
  acmid     = {2920608},
  doi       = {10.1109/ICDM.2015.33},
  isbn      = {978-1-4673-9504-5},
  numpages  = {6},
  url       = {http://dx.doi.org/10.1109/ICDM.2015.33},
}

@Article{NE04,
  author   = {Newman, M. E. J.},
  title    = {Detecting community structure in networks},
  journal  = {The European Physical Journal B},
  year     = {2004},
  volume   = {38},
  number   = {2},
  pages    = {321--330},
  month    = {Mar},
  issn     = {1434-6036},
  abstract = {There has been considerable recent interest in algorithms for finding communities in networks--groups of vertices within which connections are dense, but between which connections are sparser. Here we review the progress that has been made towards this end. We begin by describing some traditional methods of community detection, such as spectral bisection, the Kernighan-Lin algorithm and hierarchical clustering based on similarity measures. None of these methods, however, is ideal for the types of real-world network data with which current research is concerned, such as Internet and web data and biological and social networks. We describe a number of more recent algorithms that appear to work well with these data, including algorithms based on edge betweenness scores, on counts of short loops in networks and on voltage differences in resistor networks.},
  day      = {01},
  doi      = {10.1140/epjb/e2004-00124-y},
  url      = {https://doi.org/10.1140/epjb/e2004-00124-y},
}

@Article{KA98,
  author   = {George Karypis and Vipin Kumar},
  title    = {A Parallel Algorithm for Multilevel Graph Partitioning and Sparse Matrix Ordering},
  journal  = {Journal of Parallel and Distributed Computing},
  year     = {1998},
  volume   = {48},
  number   = {1},
  pages    = {71 - 95},
  issn     = {0743-7315},
  doi      = {http://dx.doi.org/10.1006/jpdc.1997.1403},
  keywords = {parallel graph partitioning, multilevel partitioning methods, fill reducing ordering, numerical linear algebra.},
  url      = {http://www.sciencedirect.com/science/article/pii/S0743731597914039},
}

@Article{SC07,
  author  = {Satu Elisa Schaeffer},
  title   = {Graph clustering},
  journal = {Computer Science Review},
  year    = {2007},
  volume  = {1},
  number  = {1},
  pages   = {27 - 64},
  issn    = {1574-0137},
  doi     = {http://dx.doi.org/10.1016/j.cosrev.2007.05.001},
  url     = {http://www.sciencedirect.com/science/article/pii/S1574013707000020},
}

@Article{PA07,
  author = {Papa, David A and Markov, Igor L},
  title  = {Hypergraph Partitioning and Clustering.},
  year   = {2007},
  url    = {http://web.eecs.umich.edu/~imarkov/pubs/book/part_survey.pdf},
}

@InProceedings{AN04,
  author    = {Andreev, Konstantin and R\"{a}cke, Harald},
  title     = {Balanced Graph Partitioning},
  booktitle = {Proceedings of the Sixteenth Annual ACM Symposium on Parallelism in Algorithms and Architectures},
  year      = {2004},
  series    = {SPAA '04},
  pages     = {120--124},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {1007931},
  doi       = {10.1145/1007912.1007931},
  isbn      = {1-58113-840-7},
  keywords  = {approximation algorithms, bicriteria approximation, graph partitioning},
  location  = {Barcelona, Spain},
  numpages  = {5},
  url       = {http://doi.acm.org/10.1145/1007912.1007931},
}

@Article{BA12,
  author    = {Barbay, J{\'e}r{\'e}my and Aleardi, Luca Castelli and He, Meng and Munro, J Ian},
  title     = {Succinct representation of labeled graphs},
  journal   = {Algorithmica},
  year      = {2012},
  volume    = {62},
  number    = {1-2},
  pages     = {224--257},
  publisher = {Springer},
}

@Article{SE06,
  author   = {N. Selvakkumaran and G. Karypis},
  title    = {Multiobjective hypergraph-partitioning algorithms for cut and maximum subdomain-degree minimization},
  journal  = {IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems},
  year     = {2006},
  volume   = {25},
  number   = {3},
  pages    = {504-517},
  month    = {March},
  issn     = {0278-0070},
  doi      = {10.1109/TCAD.2005.854637},
  keywords = {VLSI;circuit complexity;circuit optimisation;integrated circuit design;integrated circuit interconnections;logic CAD;logic partitioning;multichip modules;computer-aided design;interconnect congestion;interconnect distribution;multichip partitioning;multiobjective hypergraph-partitioning algorithm;subdomain-degree minimization;very large scale integration;Algorithm design and analysis;Application software;Computer science;Databases;Design automation;Information retrieval;Iterative algorithms;Minimization methods;Partitioning algorithms;Very large scale integration;Interconnect congestion;multichip partitioning;placement},
}

@Book{FJ98,
  title     = {Algorithms for graph partitioning: A survey},
  publisher = {Link{\"o}ping University Electronic Press Link{\"o}ping},
  year      = {1998},
  author    = {Fj{\"a}llstr{\"o}m, Per-Olof},
  volume    = {3},
  url       = {http://algo2.iti.kit.edu/schulz/publications/engineeringGP.pdf},
}

@InBook{ED99,
  pages     = {98--106},
  title     = {Graph Clustering Using Distance-k Cliques},
  publisher = {Springer Berlin Heidelberg},
  year      = {1999},
  author    = {Edachery, Jubin and Sen, Arunabha and Brandenburg, Franz J.},
  editor    = {Kratochv{\'i}yl, Jan},
  address   = {Berlin, Heidelberg},
  isbn      = {978-3-540-46648-2},
  abstract  = {Identifying the natural clusters of nodes in a graph and treating them as supernodes or metanodes for a higher level graph (or an abstract graph) is a technique used for the reduction of visual complexity of graphs with a large number of nodes. In this paper we report on the implementation of a clustering algorithm based on the idea of distance-k cliques, a generalization of the idea of the cliques in graphs. The performance of the clustering algorithm on some large graphs obtained from the archives of Bell Laboratories is presented.},
  booktitle = {Graph Drawing: 7th International Symposium, GD'99 {\v{S}}ti{\v{r}}{\'i}n Castle, Czech Republic September 15--19, 1999 Proceedings},
  doi       = {10.1007/3-540-46648-7_10},
  url       = {https://doi.org/10.1007/3-540-46648-7_10},
}

@InBook{SI06,
  pages     = {530--537},
  title     = {On the NP-Completeness of Some Graph Cluster Measures},
  publisher = {Springer Berlin Heidelberg},
  year      = {2006},
  author    = {{\v{S}}{\'i}ma, Ji{\v{r}}{\'i} and Schaeffer, Satu Elisa},
  editor    = {Wiedermann, Ji{\v{r}}{\'i} and Tel, Gerard and Pokorn{\'y}, Jaroslav and Bielikov{\'a}, M{\'a}ria and {\v{S}}tuller, J{\'u}lius},
  address   = {Berlin, Heidelberg},
  isbn      = {978-3-540-32217-7},
  abstract  = {Graph clustering is the problem of identifying sparsely connected dense subgraphs (clusters) in a given graph. Identifying clusters can be achieved by optimizing a fitness function that measures the quality of a cluster within the graph. Examples of such cluster measures include the conductance, the local and relative densities, and single cluster editing. We prove that the decision problems associated with the optimization tasks of finding clusters that are optimal with respect to these fitness measures are NP-complete.},
  booktitle = {SOFSEM 2006: Theory and Practice of Computer Science: 32nd Conference on Current Trends in Theory and Practice of Computer Science, Merin, Czech Republic, January 21-27, 2006. Proceedings},
  doi       = {10.1007/11611257_51},
  url       = {https://doi.org/10.1007/11611257_51},
}

@Article{PA12,
  author   = {Papadopoulos, Symeon and Kompatsiaris, Yiannis and Vakali, Athena and Spyridonos, Ploutarchos},
  title    = {Community detection in Social Media},
  journal  = {Data Mining and Knowledge Discovery},
  year     = {2012},
  volume   = {24},
  number   = {3},
  pages    = {515--554},
  month    = {May},
  issn     = {1573-756X},
  abstract = {The proposed survey discusses the topic of community detection in the context of Social Media. Community detection constitutes a significant tool for the analysis of complex networks by enabling the study of mesoscopic structures that are often associated with organizational and functional characteristics of the underlying networks. Community detection has proven to be valuable in a series of domains, e.g. biology, social sciences, bibliometrics. However, despite the unprecedented scale, complexity and the dynamic nature of the networks derived from Social Media data, there has only been limited discussion of community detection in this context. More specifically, there is hardly any discussion on the performance characteristics of community detection methods as well as the exploitation of their results in the context of real-world web mining and information retrieval scenarios. To this end, this survey first frames the concept of community and the problem of community detection in the context of Social Media, and provides a compact classification of existing algorithms based on their methodological principles. The survey places special emphasis on the performance of existing methods in terms of computational complexity and memory requirements. It presents both a theoretical and an experimental comparative discussion of several popular methods. In addition, it discusses the possibility for incremental application of the methods and proposes five strategies for scaling community detection to real-world networks of huge scales. Finally, the survey deals with the interpretation and exploitation of community detection results in the context of intelligent web applications and services.},
  day      = {01},
  doi      = {10.1007/s10618-011-0224-z},
  url      = {https://doi.org/10.1007/s10618-011-0224-z},
}

@Article{KAR99,
  author   = {G. Karypis and R. Aggarwal and V. Kumar and S. Shekhar},
  title    = {Multilevel hypergraph partitioning: applications in VLSI domain},
  journal  = {IEEE Transactions on Very Large Scale Integration (VLSI) Systems},
  year     = {1999},
  volume   = {7},
  number   = {1},
  pages    = {69-79},
  month    = {March},
  issn     = {1063-8210},
  abstract = {In this paper, we present a new hypergraph-partitioning algorithm that is based on the multilevel paradigm. In the multilevel paradigm, a sequence of successively coarser hypergraphs is constructed. A bisection of the smallest hypergraph is computed and it is used to obtain a bisection of the original hypergraph by successively projecting and refining the bisection to the next level finer hypergraph. We have developed new hypergraph coarsening strategies within the multilevel framework. We evaluate their performance both in terms of the size of the hyperedge cut on the bisection, as well as on the run time for a number of very large scale integration circuits. Our experiments show that our multilevel hypergraph-partitioning algorithm produces high-quality partitioning in a relatively small amount of time. The quality of the partitionings produced by our scheme are on the average 6%-23% better than those produced by other state-of-the-art schemes. Furthermore, our partitioning algorithm is significantly faster, often requiring 4-10 times less time than that required by the other schemes. Our multilevel hypergraph-partitioning algorithm scales very well for large hypergraphs. Hypergraphs with over 100 000 vertices can be bisected in a few minutes on today's workstations. Also, on the large hypergraphs, our scheme outperforms other schemes (in hyperedge cut) quite consistently with larger margins (9%-30%).},
  doi      = {10.1109/92.748202},
  keywords = {VLSI;circuit layout CAD;circuit optimisation;field programmable gate arrays;graph theory;integrated circuit layout;logic CAD;logic partitioning;multivalued logic circuits;VLSI domain;bisection;hyperedge cut;hypergraph coarsening strategies;multilevel hypergraph partitioning;partitioning algorithm;very large scale integration circuits;Circuit synthesis;Data mining;Databases;Field programmable gate arrays;High performance computing;Joining processes;Laboratories;Partitioning algorithms;Very large scale integration;Workstations},
}

@InProceedings{DE06,
  author    = {K. D. Devine and E. G. Boman and R. T. Heaphy and R. H. Bisseling and U. V. Catalyurek},
  title     = {Parallel hypergraph partitioning for scientific computing},
  booktitle = {Proceedings 20th IEEE International Parallel Distributed Processing Symposium},
  year      = {2006},
  pages     = {10 pp.-},
  month     = {April},
  abstract  = {Graph partitioning is often used for load balancing in parallel computing, but it is known that hypergraph partitioning has several advantages. First, hypergraphs more accurately model communication volume, and second, they are more expressive and can better represent nonsymmetric problems. Hypergraph partitioning is particularly suited to parallel sparse matrix-vector multiplication, a common kernel in scientific computing. We present a parallel software package for hypergraph (and sparse matrix) partitioning developed at Sandia National Labs. The algorithm is a variation on multilevel partitioning. Our parallel implementation is novel in that it uses a two-dimensional data distribution among processors. We present empirical results that show our parallel implementation achieves good speedup on several large problems (up to 33 million nonzeros) with up to 64 processors on a Linux cluster},
  doi       = {10.1109/IPDPS.2006.1639359},
  issn      = {1530-2075},
  keywords  = {graph theory;matrix multiplication;natural sciences computing;parallel processing;resource allocation;software packages;sparse matrices;load balancing;multilevel partitioning;parallel hypergraph partitioning;parallel software package;parallel sparse matrix-vector multiplication;scientific computing;two-dimensional data distribution;Circuit testing;Contracts;Costs;Kernel;Laboratories;Load management;Parallel processing;Partitioning algorithms;Scientific computing;Sparse matrices},
}

@Article{ZH17,
  author   = {Zhihong Zhang and Lu Bai and Yuanheng Liang and Edwin Hancock},
  title    = {Joint hypergraph learning and sparse regression for feature selection},
  journal  = {Pattern Recognition},
  year     = {2017},
  volume   = {63},
  number   = {Supplement C},
  pages    = {291 - 309},
  issn     = {0031-3203},
  abstract = {Abstract In this paper, we propose a unified framework for improved structure estimation and feature selection. Most existing graph-based feature selection methods utilize a static representation of the structure of the available data based on the Laplacian matrix of a simple graph. Here on the other hand, we perform data structure learning and feature selection simultaneously. To improve the estimation of the manifold representing the structure of the selected features, we use a higher order description of the neighborhood structures present in the available data using hypergraph learning. This allows those features which participate in the most significant higher order relations to be selected, and the remainder discarded, through a sparsification process. We formulate a single objective function to capture and regularize the hypergraph weight estimation and feature selection processes. Finally, we present an optimization algorithm to recover the hypergraph weights and a sparse set of feature selection indicators. This process offers a number of advantages. First, by adjusting the hypergraph weights, we preserve high-order neighborhood relations reflected in the original data, which cannot be modeled by a simple graph. Moreover, our objective function captures the global discriminative structure of the features in the data. Comprehensive experiments on 9 benchmark datasets show that our method achieves statistically significant improvement over state-of-art feature selection methods, supporting the effectiveness of the proposed method.},
  doi      = {https://doi.org/10.1016/j.patcog.2016.06.009},
  keywords = {Feature selection, Hypergraph learning, Sparse regression},
  url      = {http://www.sciencedirect.com/science/article/pii/S0031320316301273},
}

@Article{ST10,
  author     = {Stonebraker, Michael and Abadi, Daniel and DeWitt, David J. and Madden, Sam and Paulson, Erik and Pavlo, Andrew and Rasin, Alexander},
  title      = {MapReduce and Parallel DBMSs: Friends or Foes?},
  journal    = {Commun. ACM},
  year       = {2010},
  volume     = {53},
  number     = {1},
  pages      = {64--71},
  month      = jan,
  issn       = {0001-0782},
  acmid      = {1629197},
  address    = {New York, NY, USA},
  doi        = {10.1145/1629175.1629197},
  issue_date = {January 2010},
  numpages   = {8},
  publisher  = {ACM},
  url        = {http://doi.acm.org/10.1145/1629175.1629197},
}

@Misc{BU12,
  author = {Aydın Buluç and Kamesh Madduri},
  title  = {Graph Partitioning for Scalable Distributed Graph Computations},
  year   = {2012},
  url    = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.385.1605},
}

@Article{BU13,
  author    = {Aydin Bulu{\c{c}} and Henning Meyerhenke and Ilya Safro and Peter Sanders and Christian Schulz},
  title     = {Recent Advances in Graph Partitioning},
  journal   = {CoRR},
  year      = {2013},
  volume    = {abs/1311.3144},
  bibsource = {dblp computer science bibliography, http://dblp.org},
  biburl    = {http://dblp.uni-trier.de/rec/bib/journals/corr/BulucMSSS13},
  timestamp = {Wed, 07 Jun 2017 14:40:10 +0200},
  url       = {http://arxiv.org/abs/1311.3144},
}

@Article{TR08,
  author   = {Aleksandar Trifunović and William J. Knottenbelt},
  title    = {Parallel multilevel algorithms for hypergraph partitioning},
  journal  = {Journal of Parallel and Distributed Computing},
  year     = {2008},
  volume   = {68},
  number   = {5},
  pages    = {563 - 581},
  issn     = {0743-7315},
  abstract = {Abstract In this paper, we present parallel multilevel algorithms for the hypergraph partitioning problem. In particular, we describe for parallel coarsening, parallel greedy k-way refinement and parallel multi-phase refinement. Using an asymptotic theoretical performance model, we derive the isoefficiency function for our algorithms and hence show that they are technically scalable when the maximum vertex and hyperedge degrees are small. We conduct experiments on hypergraphs from six different application domains to investigate the empirical scalability of our algorithms both in terms of runtime and partition quality. Our findings confirm that the quality of partition produced by our algorithms is stable as the number of processors is increased while being competitive with those produced by a state-of-the-art serial multilevel partitioning tool. We also validate our theoretical performance model through an isoefficiency study. Finally, we evaluate the impact of introducing parallel multi-phase refinement into our parallel multilevel algorithm in terms of the trade off between improved partition quality and higher runtime cost.},
  doi      = {https://doi.org/10.1016/j.jpdc.2007.11.002},
  keywords = {Parallel hypergraph partitioning, Parallel graph partitioning, Parallel sparse matrix–vector multiplication, Sparse matrix decomposition, Load balancing, Data partitioning, VLSI circuit design},
  url      = {http://www.sciencedirect.com/science/article/pii/S0743731507002146},
}

@InProceedings{CA07,
  author    = {U. V. Catalyurek and E. G. Boman and K. D. Devine and D. Bozdag and R. Heaphy and Lee Ann Riesen},
  title     = {Hypergraph-based Dynamic Load Balancing for Adaptive Scientific Computations},
  booktitle = {2007 IEEE International Parallel and Distributed Processing Symposium},
  year      = {2007},
  pages     = {1-11},
  month     = {March},
  doi       = {10.1109/IPDPS.2007.370258},
  issn      = {1530-2075},
  keywords  = {graph theory;natural sciences computing;resource allocation;ParMETIS partitioning software;Zoltan load-balancing toolkit;adaptive scientific computation;hypergraph model;Biomedical computing;Biomedical informatics;Clustering algorithms;Computational modeling;Contracts;Costs;Laboratories;Load management;Partitioning algorithms;US Department of Energy},
}

@InProceedings{CA01,
  author    = {U. V. Catalyurek and C. Aykanat},
  title     = {A Hypergraph-Partitioning Approach for Coarse-Grain Decomposition},
  booktitle = {Supercomputing, ACM/IEEE 2001 Conference},
  year      = {2001},
  pages     = {42-42},
  month     = {Nov},
  abstract  = {We propose a new two-phase method for the coarse-grain decomposition of irregular computational domains. This work focuses on the 2D partitioning of sparse matrices for parallel matrix-vector multiplication. However, the proposed model can also be used to decompose computational domains of other parallel reduction problems. This work also introduces the use of multi-constraint hypergraph partitioning, for solving the decomposition problem. The proposed method explicitly models the minimization of communication volume while enforcing the upper bound of p + q - 2 on the maximum number of messages handled by a single processor, for a parallel system with P = p × q processors. Experimental results on a wide range of realistic sparse matrices con.rm the validity of the proposed methods, by achieving up to 25 percent better partitions than the standard graph model, in terms of total communication volume, and 59 percent better partitions in terms of number of messages, on the overall average.},
  doi       = {10.1109/SC.2001.10035},
  keywords  = {Biomedical computing;Concurrent computing;Iterative algorithms;Matrix decomposition;Partitioning algorithms;Permission;Sparse matrices;Symmetric matrices;Upper bound;Vectors},
}

@InProceedings{FI88,
  author       = {Fiduccia, Charles M and Mattheyses, Robert M},
  title        = {A linear-time heuristic for improving network partitions},
  booktitle    = {Papers on Twenty-five years of electronic design automation},
  year         = {1988},
  pages        = {241--247},
  organization = {ACM},
}

@Article{KE70,
  author   = {B. W. Kernighan and S. Lin},
  title    = {An efficient heuristic procedure for partitioning graphs},
  journal  = {The Bell System Technical Journal},
  year     = {1970},
  volume   = {49},
  number   = {2},
  pages    = {291-307},
  month    = {Feb},
  issn     = {0005-8580},
  abstract = {We consider the problem of partitioning the nodes of a graph with costs on its edges into subsets of given sizes so as to minimize the sum of the costs on all edges cut. This problem arises in several physical situations — for example, in assigning the components of electronic circuits to circuit boards to minimize the number of connections between boards. This paper presents a heuristic method for partitioning arbitrary graphs which is both effective in finding optimal partitions, and fast enough to be practical in solving large problems.},
  doi      = {10.1002/j.1538-7305.1970.tb01770.x},
}

@InProceedings{AB06,
  author    = {Abou-Rjeili, Amine and Karypis, George},
  title     = {Multilevel Algorithms for Partitioning Power-law Graphs},
  booktitle = {Proceedings of the 20th International Conference on Parallel and Distributed Processing},
  year      = {2006},
  series    = {IPDPS'06},
  pages     = {124--124},
  address   = {Washington, DC, USA},
  publisher = {IEEE Computer Society},
  acmid     = {1899055},
  isbn      = {1-4244-0054-6},
  location  = {Rhodes Island, Greece},
  numpages  = {1},
  url       = {http://dl.acm.org/citation.cfm?id=1898953.1899055},
}

@InBook{WA93,
  pages     = {744--750},
  title     = {Between Min Cut and Graph Bisection},
  publisher = {Springer Berlin Heidelberg},
  year      = {1993},
  author    = {Wagner, Dorothea and Wagner, Frank},
  editor    = {Borzyszkowski, Andrzej M. and Soko{\l}owski, Stefan},
  address   = {Berlin, Heidelberg},
  isbn      = {978-3-540-47927-7},
  abstract  = {We investigate a class of graph partitioning problems whose two extreme representatives are the well-known Min Cut and Graph Bisection problems. The former is known to be efficiently solvable by flow techniques, the latter to be NP-complete. The results presented in this paper are                                  a monotony result of the type`` The more balanced the partition we look for has to be, the harder the problem''.                                                  a complexity result clarifying the status of a large part of intermediate problems in the class.                              },
  booktitle = {Mathematical Foundations of Computer Science 1993: 18th International Symposium, MFCS'93 Gda{\'{n}}sk, Poland, August 30--September 3, 1993 Proceedings},
  doi       = {10.1007/3-540-57182-5_65},
  url       = {https://doi.org/10.1007/3-540-57182-5_65},
}

@InProceedings{KA99,
  author    = {Karypis, George and Kumar, Vipin},
  title     = {Multilevel K-way Hypergraph Partitioning},
  booktitle = {Proceedings of the 36th Annual ACM/IEEE Design Automation Conference},
  year      = {1999},
  series    = {DAC '99},
  pages     = {343--348},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {309954},
  doi       = {10.1145/309847.309954},
  isbn      = {1-58113-109-7},
  location  = {New Orleans, Louisiana, USA},
  numpages  = {6},
  url       = {http://doi.acm.org/10.1145/309847.309954},
}

@Article{KA17,
  author    = {Igor Kabiljo and Brian Karrer and Mayank Pundir and Sergey Pupyrev and Alon Shalita and Alessandro Presta and Yaroslav Akhremtsev},
  title     = {Social Hash Partitioner: {A} Scalable Distributed Hypergraph Partitioner},
  journal   = {CoRR},
  year      = {2017},
  volume    = {abs/1707.06665},
  bibsource = {dblp computer science bibliography, http://dblp.org},
  biburl    = {http://dblp.uni-trier.de/rec/bib/journals/corr/KabiljoKPPSPA17},
  timestamp = {Sat, 05 Aug 2017 14:56:07 +0200},
  url       = {http://arxiv.org/abs/1707.06665},
}

@Article{HE16,
  author = {Heintz, Benjamin and Singh, Shivangi and Tesdahl, Corey and Chandra, Abhishek},
  title  = {MESH: A Flexible Distributed Hypergraph Processing System},
  year   = {2016},
  url    = {https://www.cs.umn.edu/research/technical_reports/view/16-038},
}

@InProceedings{CH14,
  author    = {Chen, Rong and Shi, Jiaxin and Zang, Binyu and Guan, Haibing},
  title     = {Bipartite-oriented Distributed Graph Partitioning for Big Learning},
  booktitle = {Proceedings of 5th Asia-Pacific Workshop on Systems},
  year      = {2014},
  series    = {APSys '14},
  pages     = {14:1--14:7},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2637236},
  articleno = {14},
  doi       = {10.1145/2637166.2637236},
  isbn      = {978-1-4503-3024-4},
  location  = {Beijing, China},
  numpages  = {7},
  url       = {http://doi.acm.org/10.1145/2637166.2637236},
}

@InProceedings{BO14,
  author    = {Bourse, Florian and Lelarge, Marc and Vojnovic, Milan},
  title     = {Balanced Graph Edge Partition},
  booktitle = {Proceedings of the 20th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining},
  year      = {2014},
  series    = {KDD '14},
  pages     = {1456--1465},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2623660},
  doi       = {10.1145/2623330.2623660},
  isbn      = {978-1-4503-2956-9},
  keywords  = {approximation algorithms, distributed massive computation, graph edge partition, streaming heuristics},
  location  = {New York, New York, USA},
  numpages  = {10},
  url       = {http://doi.acm.org/10.1145/2623330.2623660},
}

@InProceedings{AL15,
  author    = {Alistarh, Dan and Iglesias, Jennifer and Vojnovic, Milan},
  title     = {Streaming Min-max Hypergraph Partitioning},
  booktitle = {Proceedings of the 28th International Conference on Neural Information Processing Systems - Volume 2},
  year      = {2015},
  series    = {NIPS'15},
  pages     = {1900--1908},
  address   = {Cambridge, MA, USA},
  publisher = {MIT Press},
  acmid     = {2969452},
  location  = {Montreal, Canada},
  numpages  = {9},
  url       = {http://dl.acm.org/citation.cfm?id=2969442.2969452},
}

@InProceedings{GO12,
  author    = {Joseph E. Gonzalez and Yucheng Low and Haijie Gu and Danny Bickson and Carlos Guestrin},
  title     = {PowerGraph: Distributed Graph-Parallel Computation on Natural Graphs},
  booktitle = {Presented as part of the 10th {USENIX} Symposium on Operating Systems Design and Implementation ({OSDI} 12)},
  year      = {2012},
  pages     = {17--30},
  address   = {Hollywood, CA},
  publisher = {{USENIX}},
  isbn      = {978-1-931971-96-6},
  url       = {https://www.usenix.org/conference/osdi12/technical-sessions/presentation/gonzalez},
}

@Article{LE08,
  author        = {Jure Leskovec and Kevin J. Lang and Anirban Dasgupta and Michael W. Mahoney},
  title         = {Community Structure in Large Networks: Natural Cluster Sizes and the Absence of Large Well-Defined Clusters},
  journal       = {CoRR},
  year          = {2008},
  volume        = {abs/0810.1355},
  archiveprefix = {arXiv},
  bibsource     = {dblp computer science bibliography, http://dblp.org},
  biburl        = {http://dblp.org/rec/bib/journals/corr/abs-0810-1355},
  eprint        = {0810.1355},
  timestamp     = {Wed, 07 Jun 2017 14:40:49 +0200},
  url           = {http://arxiv.org/abs/0810.1355},
}

@InProceedings{KA09,
  author    = {Krauthgamer, Robert and Naor, Joseph (Seffi) and Schwartz, Roy},
  title     = {Partitioning Graphs into Balanced Components},
  booktitle = {Proceedings of the Twentieth Annual ACM-SIAM Symposium on Discrete Algorithms},
  year      = {2009},
  series    = {SODA '09},
  pages     = {942--949},
  address   = {Philadelphia, PA, USA},
  publisher = {Society for Industrial and Applied Mathematics},
  acmid     = {1496872},
  location  = {New York, New York},
  numpages  = {8},
  url       = {http://dl.acm.org/citation.cfm?id=1496770.1496872},
}

@Article{KE04,
  author = {Lang, Kevin},
  title  = {Finding good nearly balanced cuts in power law graphs},
  year   = {2004},
  month  = {12},
}

@InBook{SM07,
  pages     = {311--323},
  title     = {Algorithms for the Balanced Edge Partitioning Problem},
  publisher = {Springer Berlin Heidelberg},
  year      = {2007},
  author    = {Smorodkina, Ekaterina and Thakur, Mayur and Tauritz, Daniel},
  editor    = {Demetrescu, Camil},
  address   = {Berlin, Heidelberg},
  isbn      = {978-3-540-72845-0},
  abstract  = {We consider the problem of minimizing communication overhead while balancing load across cooperative agents. In the past, similar problems have been modeled as the balanced node partitioning problem, where the objective is to partition the nodes into components such that each component has roughly the same number of nodes while the number of edges connecting components is minimized. We describe some real-world scenarios where one needs to find partitions in which all components have an approximately equal number of edges, while minimizing the number of edges connecting components. We introduce the (k, r)-Balanced Edge Partitioning problem to model this type of scenario and present approximation algorithms for this problem on certain graphs. In addition, we present five heuristics for the restricted case of the problem. We evaluate these heuristics on three kinds of graphs: power network-like graphs, preferential attachment graphs, and the class of spatial preferential attachment graphs that we introduce in this paper. Our results show that the choice of the heuristic with the best results depends on the properties of the input graph and the quality of our solution depends on the initial conditions.},
  booktitle = {Experimental Algorithms: 6th International Workshop, WEA 2007, Rome, Italy, June 6-8, 2007. Proceedings},
  doi       = {10.1007/978-3-540-72845-0_24},
  url       = {https://doi.org/10.1007/978-3-540-72845-0_24},
}

@Article{LO16,
  author        = {Foad Lotfifar and Matthew Johnson},
  title         = {A Serial Multilevel Hypergraph Partitioning Algorithm},
  journal       = {CoRR},
  year          = {2016},
  volume        = {abs/1601.01336},
  archiveprefix = {arXiv},
  bibsource     = {dblp computer science bibliography, http://dblp.org},
  biburl        = {http://dblp.org/rec/bib/journals/corr/LotfifarJ16},
  eprint        = {1601.01336},
  timestamp     = {Wed, 07 Jun 2017 14:42:13 +0200},
  url           = {http://arxiv.org/abs/1601.01336},
}

@InBook{YA16,
  pages     = {477--490},
  title     = {A Distributed Algorithm for Balanced Hypergraph Partitioning},
  publisher = {Springer International Publishing},
  year      = {2016},
  author    = {Yang, Wenyin and Wang, Guojun and Ma, Li and Wu, Shiyang},
  editor    = {Wang, Guojun and Han, Yanbo and Mart{\'i}nez P{\'e}rez, Gregorio},
  address   = {Cham},
  isbn      = {978-3-319-49178-3},
  abstract  = {Hypergraph is good at modeling multi-node relationships in complex networks. Balanced hypergraph partitioning helps to optimize storage of large sets of hypergraph-structured data over multi-hosts in the Cloud, and share the query loads. Several centralized vertex partitioning algorithms have been developed to address this problem. However, edge partitioning is proved more effective than vertex partitioning for graph processing. Aim of this paper is to explore a new approach based on hyperedge partitioning, in which hyperedges, rather than vertices, are partitioned into disjoint subsets. We propose a distributed hyperedge partition algorithm, HyperSwap, to partition the hypergraph into balanced sub-hypergraph as required, without global information and central coordination. We show the feasibility, evaluate it on Facebook dataset with various settings, and compare it against two alternative solutions. Experiment findings show that HyperSwap outperforms the other two partitioners because it obtains good partitions with low cut cost while conforming to any balance requirement.},
  booktitle = {Advances in Services Computing: 10th Asia-Pacific Services Computing Conference, APSCC 2016, Zhangjiajie, China, November 16-18, 2016, Proceedings},
  doi       = {10.1007/978-3-319-49178-3_36},
  url       = {https://doi.org/10.1007/978-3-319-49178-3_36},
}

@InProceedings{CH15,
  author    = {Chen, Rong and Shi, Jiaxin and Chen, Yanzhe and Chen, Haibo},
  title     = {PowerLyra: Differentiated Graph Computation and Partitioning on Skewed Graphs},
  booktitle = {Proceedings of the Tenth European Conference on Computer Systems},
  year      = {2015},
  series    = {EuroSys '15},
  pages     = {1:1--1:15},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2741970},
  articleno = {1},
  doi       = {10.1145/2741948.2741970},
  isbn      = {978-1-4503-3238-5},
  location  = {Bordeaux, France},
  numpages  = {15},
  url       = {http://doi.acm.org/10.1145/2741948.2741970},
}

@Article{DE02,
  author  = {Karen Devine and Erik Boman and Robert Heaphy and Bruce Hendrickson and Courtenay Vaughan},
  title   = {{Zoltan} Data Management Services for Parallel Dynamic Applications},
  journal = {Computing in Science and Engineering},
  year    = {2002},
  volume  = {4},
  number  = {2},
  pages   = {90--97},
}

@Article{XI15,
  author        = {Cong Xie and Wu{-}Jun Li and Zhihua Zhang},
  title         = {S-PowerGraph: Streaming Graph Partitioning for Natural Graphs by Vertex-Cut},
  journal       = {CoRR},
  year          = {2015},
  volume        = {abs/1511.02586},
  archiveprefix = {arXiv},
  bibsource     = {dblp computer science bibliography, http://dblp.org},
  biburl        = {http://dblp.org/rec/bib/journals/corr/XieLZ15},
  eprint        = {1511.02586},
  timestamp     = {Wed, 07 Jun 2017 14:41:09 +0200},
  url           = {http://arxiv.org/abs/1511.02586},
}

@Article{FI73,
  author    = {Fiedler, Miroslav},
  title     = {Algebraic connectivity of graphs},
  journal   = {Czechoslovak mathematical journal},
  year      = {1973},
  volume    = {23},
  number    = {2},
  pages     = {298--305},
  publisher = {Institute of Mathematics, Academy of Sciences of the Czech Republic},
}

@TechReport{KA95,
  author = {George Karypis and Vipin Kumar},
  title  = {METIS -- Unstructured Graph Partitioning and Sparse Matrix Ordering System, Version 2.0},
  year   = {1995},
}

@InProceedings{ZHA17,
  author       = {Zhang, Chenzi and Wei, Fan and Liu, Qin and Tang, Zhihao Gavin and Li, Zhenguo},
  title        = {Graph Edge Partitioning via Neighborhood Heuristic},
  booktitle    = {Proceedings of the 23rd ACM SIGKDD International Conference on Knowledge Discovery and Data Mining},
  year         = {2017},
  pages        = {605--614},
  organization = {ACM},
}

@Article{LI17,
  author     = {Li, Lingda and Geda, Robel and Hayes, Ari B. and Chen, Yanhao and Chaudhari, Pranav and Zhang, Eddy Z. and Szegedy, Mario},
  title      = {A Simple Yet Effective Balanced Edge Partition Model for Parallel Computing},
  journal    = {Proc. ACM Meas. Anal. Comput. Syst.},
  year       = {2017},
  volume     = {1},
  number     = {1},
  pages      = {14:1--14:21},
  month      = jun,
  issn       = {2476-1249},
  acmid      = {3084451},
  address    = {New York, NY, USA},
  articleno  = {14},
  doi        = {10.1145/3084451},
  issue_date = {June 2017},
  keywords   = {data sharing, edge partition, gpu, graph model, program locality},
  numpages   = {21},
  publisher  = {ACM},
  url        = {http://doi.acm.org/10.1145/3084451},
}

@InBook{RA14,
  pages     = {186--200},
  title     = {Distributed Vertex-Cut Partitioning},
  publisher = {Springer Berlin Heidelberg},
  year      = {2014},
  author    = {Rahimian, Fatemeh and Payberah, Amir H. and Girdzijauskas, Sarunas and Haridi, Seif},
  editor    = {Magoutis, Kostas and Pietzuch, Peter},
  address   = {Berlin, Heidelberg},
  isbn      = {978-3-662-43352-2},
  abstract  = {Graph processing has become an integral part of big data analytics. With the ever increasing size of the graphs, one needs to partition them into smaller clusters, which can be managed and processed more easily on multiple machines in a distributed fashion. While there exist numerous solutions for edge-cut partitioning of graphs, very little effort has been made for vertex-cut partitioning. This is in spite of the fact that vertex-cuts are proved significantly more effective than edge-cuts for processing most real world graphs. In this paper we present Ja-be-Ja-vc, a parallel and distributed algorithm for vertex-cut partitioning of large graphs. In a nutshell, Ja-be-Ja-vc is a local search algorithm that iteratively improves upon an initial random assignment of edges to partitions. We propose several heuristics for this optimization and study their impact on the final partitioning. Moreover, we employ simulated annealing technique to escape local optima. We evaluate our solution on various graphs and with variety of settings, and compare it against two state-of-the-art solutions. We show that Ja-be-Ja-vc outperforms the existing solutions in that it not only creates partitions of any requested size, but also requires a vertex-cut that is better than its counterparts and more than 70{\%} better than random partitioning.},
  booktitle = {Distributed Applications and Interoperable Systems: 14th IFIP WG 6.1 International Conference, DAIS 2014, Held as Part of the 9th International Federated Conference on Distributed Computing Techniques, DisCoTec 2014, Berlin, Germany, June 3-5, 2014, Proceedings},
  doi       = {10.1007/978-3-662-43352-2_15},
  url       = {https://doi.org/10.1007/978-3-662-43352-2_15},
}

@Comment{jabref-meta: databaseType:bibtex;}
